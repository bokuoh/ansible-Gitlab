# database
- name: add MySQL database {{ mysql_gitlab_database }}
  mysql_db: db={{ mysql_gitlab_database }} state=present encoding=utf8 collation=utf8_unicode_ci
  remote_user: git

- name: add MySQL server user for localhost
  mysql_user: user=git host=localhost password={{ mysql_gitlab_password }} state=present
              priv="{{ mysql_gitlab_database }}.*:SELECT, LOCK TABLES, INSERT, UPDATE, DELETE, CREATE, DROP, INDEX, ALTER"
  remote_user: git

# gitlab
- name: Download gitlab
  git: repo=https://github.com/gitlabhq/gitlabhq.git dest=~/gitlab
       version={{ gitlab_version }} update=no
  remote_user: git

- name: Copy the example GitLab config
  shell: cp config/gitlab.yml.example config/gitlab.yml chdir=~/gitlab
  remote_user: git

- name: Copy the example Unicorn config
  shell: cp config/unicorn.rb.example config/unicorn.rb chdir=~/gitlab
  remote_user: git

- name: Copy the example Rack attack config
  shell: cp config/initializers/rack_attack.rb.example config/initializers/rack_attack.rb chdir=~/gitlab
  remote_user: git

- name: Copy the example resque config. Configure Redis connection settings
  shell: cp config/resque.yml.example config/resque.yml chdir=~/gitlab
  remote_user: git

- name: Set Permission log
  #file: path=~/home/gitlab/log state=directory owner=git group=git mode=0775
  file: path={{ item }} state=directory owner=git group=git mode=0775
  remote_user: git
  with_items:
    - ~/home/gitlab/log
    - ~/home/gitlab/tmp
    - ~/home/gitlab/tmp/pids
    - ~/home/gitlab/tmp/sockets
    - ~/home/gitlab/public/uploads
    - ~/gitlab-satellites

- name: Template config/database.yml
  template: src=database.yml.mysql.j2 dest=~/gitlab/config/database.yml mode=0600
  remote_user: git


# gem
- name: Install Gems
  gem: name=charlock_holmes version=0.6.9.4 state=present
  remote_user: git

# bundle install
- name: Add source "http://production.s3.rubygems.org"
  lineinfile: dest=/home/git/gitlab/Gemfile
              insertbefore=BOF
              line='source "http://production.s3.rubygems.org"'

- name: Install cmake for rugged
  yum: pkg=cmake state=present

- name: Bundle config parallel
  shell: bundle config --global --jobs 4 chdir=~/gitlab
  remote_user: git

- name: Install Bundle
  shell: bundle install --deployment --without development test postgres aws chdir=~/gitlab
  remote_user: git

# Initialize Database and Activate Advanced Features
# Force it to be silent (issue 31)
- name: Initialize Database and Activate Advanced Features
  shell: "export force=yes && bundle exec rake gitlab:setup RAILS_ENV=production chdir=~/gitlab"
  remote_user: git

- name: Check Application Status
  shell: "bundle exec rake gitlab:env:info RAILS_ENV=production chdir=~/gitlab"
  remote_user: git
  register: res_info

- debug: var=res_info.stderr | to_nice_yaml
- debug: var=res_info.stdout_lines | to_nice_yaml

- name: Compile Assets
  shell: "bundle exec rake assets:precompile RAILS_ENV=production chdir=~/gitlab"
  remote_user: git

# Double-check Application Status
- name: Double-check Application Status
  shell: "bundle exec rake gitlab:check RAILS_ENV=production chdir=~/gitlab"
  remote_user: git
  register: res_check

- debug: var=res_check.stderr | to_nice_yaml
- debug: var=res_check.stdout_lines | to_nice_yaml

# Add Gitlab as service
- name: Copy /etc/init.d/gitlab
  shell: cp /home/git/gitlab/lib/support/init.d/gitlab /etc/init.d/gitlab

- name: Persmisson
  file: path=/etc/init.d/gitlab mode=0755 owner=root group=root

- name: ensure gitlab is running automatically at boot time
  service: name=gitlab state=started enabled=yes

# Logrotate
- name: Copy the example logrotate config
  shell: cp /home/git/gitlab/lib/support/logrotate/gitlab /etc/logrotate.d/gitlab

# Add Config for Nginx
- name: Template nginx/conf.d/gitlab.conf
  template: src=nginx_gitlab.conf.j2 dest=/etc/nginx/conf.d/gitlab.conf mode=0644

- name: restart gitlab
  service: name=gitlab state=restarted

- name: restart nginx
  service: name=nginx state=restarted
